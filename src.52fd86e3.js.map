{"version":3,"sources":["index.js"],"names":["BASE_URL","fetchBooks","fetch","then","res","json","fetchBookByID","id","addBook","book","options","method","headers","body","JSON","stringify","updateBook","removeBook","getFruit","name","fruits","apple","orange","kiwi","Promise","resolve","setTimeout","makeSmoothie","console","time","all","timeEnd","error","log","message","addNewBook","response","newBook","renderBook","add","document","querySelector","addEventListener","addTask","tasks","event","preventDefault","task","currentTarget","firstElementChild","value","insertAdjacentHTML","onClick","parentNode","classList","contains","remove"],"mappings":";;;AAyIC,aAzID,QAAA,oBAGA,MAAMA,EAAW,wBAEjB,SAASC,IACAC,OAAAA,SAASF,WAAkBG,KAAKC,GAAOA,EAAIC,QAGpD,SAASC,EAAcC,GACdL,OAAAA,SAASF,WAAkBO,KAAMJ,KAAKC,GAAOA,EAAIC,QAQ1D,SAASG,EAAQC,GACTC,MAAAA,EAAU,CACdC,OAAQ,OACRC,QAAS,CAAkB,eAAA,oBAC3BC,KAAMC,KAAKC,UAAUN,IAEhBP,OAAAA,SAASF,UAAkBU,GAASP,KAAKC,GAAOA,EAAIC,QAU7D,SAASW,EAAWT,EAAIE,GAChBC,MAAAA,EAAU,CACdC,OAAQ,QACRC,QAAS,CAAkB,eAAA,oBAC3BC,KAAMC,KAAKC,UAAUN,IAEhBP,OAAAA,SAASF,WAAkBO,IAAMG,GAASP,KAAKC,GAAOA,EAAIC,QAMnE,SAASY,EAAWV,GAIXL,OAAAA,SAASF,WAAkBO,IAHlB,CACdI,OAAQ,WASZ,SAASO,EAASC,GACVC,MAAAA,EAAS,CAAEC,MAAO,WAAYC,OAAQ,WAAYC,KAAM,QACvD,OAAA,IAAIC,QAAQC,GAAWC,WAAW,IAAMD,EAAQL,EAAOD,IAAQ,MAGxE,eAAeQ,IACT,IACFC,QAAQC,KAAK,QAEPR,MAAAA,EAAQH,EAAS,SACjBI,EAASJ,EAAS,UAClBK,EAAOL,EAAS,QAEhBE,QAAeI,QAAQM,IAAI,CAACT,EAAOC,EAAQC,IAI1CH,OAFPQ,QAAQG,QAAQ,QAETX,EACP,MAAOY,GACPJ,QAAQK,IAAID,EAAMb,KAAM,KAAMa,EAAME,UAQxC,eAAeC,EAAW1B,GAClBC,MAAAA,EAAU,CACdC,OAAQ,OACRC,QAAS,CAAkB,eAAA,oBAC3BC,KAAMC,KAAKC,UAAUN,IAGjB2B,QAAiBlC,SAASF,UAAkBU,GAE3C2B,aADeD,EAAS/B,OAQjC,eAAeiC,EAAWD,GACpB,IACI5B,MAAAA,QAAa0B,EAAWE,GAC9BT,QAAQK,IAAIxB,GACZ,MAAOuB,GACPJ,QAAQK,IAAID,EAAMb,KAAM,KAAMa,EAAME,UAzBxCP,IAAexB,KAAKiB,GAAUQ,QAAQK,IAAIb,IA6B1CkB,EAAW,IAIX,MAAMC,EAAMC,SAASC,cAAc,QACnCF,EAAIG,iBAAiB,SAAUC,GAE/B,MAAMC,EAAQJ,SAASC,cAAc,UAErC,SAASE,EAAQE,GACfA,EAAMC,iBACAC,MAAAA,EAAOF,EAAMG,cAAcC,kBAAkBC,MACtC,KAATH,GAAwB,MAATA,IAGnBH,EAAMO,mBACJ,iCACoBJ,0DAEtBP,SAASC,cAAc,UAAUC,iBAAiB,QAASU,IAG7D,SAASA,EAAQP,GACXA,EAAMG,cAAcK,WAAWC,UAAUC,SAAS,OACpDV,EAAMG,cAAcK,WAAWG,SAGjCX,EAAMG,cAAcK,WAAWC,UAAUf,IAAI","file":"src.52fd86e3.js","sourceRoot":"../src","sourcesContent":["import './css/styles.css';\n// ++++++++++++++++++++++++++   CRUD  ++++++++++++++++++++++++++\n\nconst BASE_URL = 'http://localhost:3000';\n\nfunction fetchBooks() {\n  return fetch(`${BASE_URL}/books`).then(res => res.json());\n}\n\nfunction fetchBookByID(id) {\n  return fetch(`${BASE_URL}/books/${id}`).then(res => res.json());\n}\n\n// fetchBooks().then(console.log); // render function can be here\n// fetchBookByID(3)\n//   .then(console.log)\n//   .catch(error => console.log(error));\n\nfunction addBook(book) {\n  const options = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(book),\n  };\n  return fetch(`${BASE_URL}/books`, options).then(res => res.json());\n}\n\n// addBook({\n//   title: 'fu-book',\n//   author: 'someone',\n//   genres: ['g1', 'g4'],\n//   rating: 1,\n// }).then(console.log).catch(error => console.log(error));\n\nfunction updateBook(id, book) {\n  const options = {\n    method: 'PATCH',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(book),\n  };\n  return fetch(`${BASE_URL}/books/${id}`, options).then(res => res.json());\n}\n\n// updateBook(4, { title: 'cool book' }).then(console.log).catch(error => console.log(error));\n// updateBook(5, { rating: 3 }).then(console.log).catch(error => console.log(error));\n\nfunction removeBook(id) {\n  const options = {\n    method: 'DELETE',\n  };\n  return fetch(`${BASE_URL}/books/${id}`, options);\n}\n\n// removeBook(9).catch(error => console.log(error));\n\n//  ++++++++++++++++++++++++++  async/await    ++++++++++++++++++++++++++\n\nfunction getFruit(name) {\n  const fruits = { apple: 'тиблочко', orange: 'ліпісіна', kiwi: 'ківі' };\n  return new Promise(resolve => setTimeout(() => resolve(fruits[name]), 1000));\n}\n\nasync function makeSmoothie() {\n  try {\n    console.time('time');\n\n    const apple = getFruit('apple');\n    const orange = getFruit('orange');\n    const kiwi = getFruit('kiwi');\n\n    const fruits = await Promise.all([apple, orange, kiwi]);\n\n    console.timeEnd('time');\n\n    return fruits;\n  } catch (error) {\n    console.log(error.name, ': ', error.message);\n  }\n}\n\nmakeSmoothie().then(fruits => console.log(fruits));\n\n// +++++++++++ practice\n\nasync function addNewBook(book) {\n  const options = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(book),\n  };\n\n  const response = await fetch(`${BASE_URL}/books`, options);\n  const newBook = await response.json();\n  return newBook;\n}\n\n// addNewBook({ title: 'Book2', author: 'someontElse2', genres: ['g3', 'g4'], rating: 5 }).then(\n//   console.log,\n// );\n\nasync function renderBook(newBook) {\n  try {\n    const book = await addNewBook(newBook);\n    console.log(book);\n  } catch (error) {\n    console.log(error.name, ': ', error.message);\n  }\n}\n\nrenderBook(15);\n\n// --------------------- TO DO LIST  ---------------------\n\nconst add = document.querySelector('.add');\nadd.addEventListener('submit', addTask);\n\nconst tasks = document.querySelector('.tasks');\n\nfunction addTask(event) {\n  event.preventDefault();\n  const task = event.currentTarget.firstElementChild.value;\n  if (task === '' || task === ' ') {\n    return;\n  }\n  tasks.insertAdjacentHTML(\n    'afterbegin',\n    `<li class=\"text\">${task}<button class=\"x-btn\" type=\"button\"> x </button></li>`,\n  );\n  document.querySelector('.x-btn').addEventListener('click', onClick);\n}\n\nfunction onClick(event) {\n  if (event.currentTarget.parentNode.classList.contains('red')) {\n    event.currentTarget.parentNode.remove();\n    return;\n  }\n  event.currentTarget.parentNode.classList.add('red');\n}\n"]}